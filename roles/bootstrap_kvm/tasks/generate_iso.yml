---
- name: Cleanup any previous bootstrapping directory structure
  file:
    path: "{{ bts_path }}"
    state: absent

- name: Create the bootstrapping directory structure
  file:
    path: "{{ bts_path }}/{{ iso_folder }}"
    state: directory
    mode: 0755
  loop: "{{ bts_iso_folders }}"
  loop_control:
    loop_var: iso_folder

- name: Create the init-cfg.txt file and add the bootstrapping info.
  lineinfile:
    dest: "{{ bts_initcfg_filespec }}"
    state: present
    create: yes
    line: "{{ item.line }}"
    mode: 0644
  with_items:
    - { line: "type=static" }
    - { line: "ip-address={{ vnf.ip_address }}" }
    - { line: "default-gateway={{ vnf.default_gateway }}" }
    - { line: "netmask={{ vnf.netmask }}" }
    - { line: "hostname={{ vnf.hostname }}" }
    - { line: "vm-auth-key={{ vnf.vm_auth_key }}" }
    - { line: "panorama-server={{ vnf.panorama_server }}" }
    - { line: "tplname={{ vnf.template_name }}" }
    - { line: "dgname={{ vnf.device_group }}" }
    - { line: "dns-primary={{ vnf.dns_primary }}" }
    - { line: "dns-secondary={{ vnf.dns_secondary }}" }

- name: Generate Bootstrap XML
  ansible.builtin.template:
    src: bootstrap.xml
    dest: "{{ bts_bootstrap_filespec }}"
    mode: 0644
  when: vnf.admin_password != None and vnf.admin_password | length > 0

- name: Create license Authcode file and add the authcode
  lineinfile:
    dest: "{{ bts_authcodes_filespec }}"
    state: present
    create: yes
    line: "{{ vnf.auth_code }}"
    mode: 0644
  when: vnf.auth_code != None and vnf.auth_code | length > 0

- name: Burn an ISO image (MacOS hdiutil)
  command: hdiutil makehybrid -o {{ bts_iso_image_filespec }} {{ bts_path }} -iso -joliet
  when: ansible_os_family == "Darwin"

- name: Burn an ISO image (Linux mkisofs)
  command: mkisofs -J -o {{ bts_iso_image_filespec }} {{ bts_path }}
  when: ansible_os_family == "RedHat" or ansible_os_family == "Debian"
